plugins {
	// https://github.com/researchgate/gradle-release
    id 'net.researchgate.release' version '2.6.0'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8
group = 'org.dstadler'
archivesBaseName = 'commons-test'

repositories {
	mavenCentral()
}

configurations {
    all*.exclude group: 'javax.mail', module:'mail' // not needed here
    all*.exclude group: 'javax.activation', module:'activation' // not needed here
}

dependencies {
	compile 'org.apache.commons:commons-lang3:3.7'
	compile 'org.dstadler:commons-dost:1.0.0.23'

	// dumbster is somewhat broken, but we use it in SafeCloseSmtpServer...
	compile 'javax.mail:javax.mail-api:1.5.6'		// dumbster includes 1.3.2, but this has no jar?!
	compile 'dumbster:dumbster:1.6'

	// for TestHelpers we need junit during normal compile...
	compile 'junit:junit:4.12'

	testCompile 'org.apache.commons:commons-email:1.5'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

task adjustWrapperPropertiesFile << {
	ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
		fileset(dir: project.projectDir, includes: 'gradle/wrapper/gradle-wrapper.properties')
	}
	new File(project.projectDir, 'gradle/wrapper/gradle-wrapper.properties').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	ant.fixcrlf(file: 'gradle/wrapper/gradle-wrapper.properties', eol: 'lf')
}
wrapper.finalizedBy adjustWrapperPropertiesFile

test {
	systemProperties = System.properties as Map<String, ?>

	// enable to show standard out and standard error of the test JVM(s) on the console
	// testLogging.showStandardStreams = true

	// http://forums.gradle.org/gradle/topics/jacoco_related_failure_in_multiproject_build
	systemProperties['user.dir'] = workingDir
}

jacoco {
	toolVersion = '0.7.9'
}

jacocoTestReport {
    reports {
        xml.enabled true
	}
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

//provide defaults so we do not need to specify them always
if (!project.hasProperty('ossrhUsername')) {
    ext.ossrhUsername = ''
}
if (!project.hasProperty('ossrhPassword')) {
    ext.ossrhPassword = ''
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Common Test Utilities'
        packaging 'jar'
        // optionally artifactId can be defined here 
        description 'Common testing utilities I find useful in many of my projects.'
        url 'https://github.com/centic9/commons-test'

        scm {
          connection 'scm:git@github.com:centic9/commons-test.git'
          developerConnection 'scm:git@github.com:centic9/commons-test.git'
          url 'https://github.com/centic9/commons-test'
        }

        licenses {
          license {
            name 'BSD 2-Clause License'
            url 'http://www.opensource.org/licenses/bsd-license.php'
          }
        }

        developers {
          developer {
            id 'centic9	'
            name 'Dominik Stadler'
          }
        }
      }
    }
  }
}

afterReleaseBuild.dependsOn uploadArchives
