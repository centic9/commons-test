buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.thetaphi:forbiddenapis:3.6'
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    // https://github.com/researchgate/gradle-release
    id 'net.researchgate.release' version '3.0.2'
    id 'io.codearte.nexus-staging' version '0.30.0'

	// https://gradle-pitest-plugin.solidsoft.info/
	id 'info.solidsoft.pitest' version '1.9.11'
}

apply plugin: 'de.thetaphi.forbiddenapis'
apply plugin: 'jacoco'
apply plugin: 'signing'

sourceCompatibility = JavaVersion.VERSION_11
group = 'org.dstadler'
archivesBaseName = 'commons-test'

repositories {
    mavenCentral()
}

forbiddenApis {
    suppressAnnotations = ['org.dstadler.commons.util.SuppressForbidden']
    bundledSignatures = [ 'jdk-reflection', 'commons-io-unsafe-2.11.0', 'jdk-internal' ]
}
forbiddenApisMain {
    // 'jdk-unsafe', 'jdk-system-out'
    bundledSignatures += [ 'jdk-deprecated', 'jdk-internal', 'jdk-non-portable' ]
}

configurations {
    all*.exclude group: 'javax.mail', module:'mail' // not needed here
    all*.exclude group: 'javax.activation', module:'activation' // not needed here
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'org.dstadler:commons-dost:1.3.0'

    // dumbster is somewhat broken, but we use it in SafeCloseSmtpServer...
    // dumbster includes javax.mail-api 1.3.2, but this has no jar?!
    // also javax.mail-api 1.6.0-rc1 and newer causes MockSMTPServerTest.testSendEmail() to time out!
    // probably because the old version of dumbster and our SafeCloseSmtpServer do not implement something...
    api 'javax.mail:javax.mail-api:1.5.6'
    api 'dumbster:dumbster:1.6'

    // for TestHelpers we need junit during normal compile...
    implementation 'org.junit.vintage:junit-vintage-engine:5.10.2'

    testImplementation 'org.apache.commons:commons-email:1.5'
    testImplementation 'com.sun.activation:javax.activation:1.2.0'     // needed for JDK 11
}

wrapper {
    gradleVersion = '8.5'
}

test {
    systemProperties = System.properties as Map<String, ?>

    // enable to show standard out and standard error of the test JVM(s) on the console
    // testLogging.showStandardStreams = true

    // http://forums.gradle.org/gradle/topics/jacoco_related_failure_in_multiproject_build
    systemProperties['user.dir'] = workingDir
}

jacoco {
    toolVersion = '0.8.11'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

java {
    withJavadocJar()
    withSourcesJar()
}

release {
    git {
        requireBranch.set('master')
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java

            pom {
                name = 'Common Test Utilities'
                description = 'Common testing utilities I find useful in many of my projects.'
                url = 'https://github.com/centic9/commons-test'
                licenses {
                    license {
                        name = 'BSD 2-Clause "Simplified" License'
                        url = 'https://github.com/centic9/commons-test/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'centic9'
                        name = 'Dominik Stadler'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:centic9/commons-test'
                    developerConnection = 'scm:git@github.com:centic9/commons-test'
                    url = 'https://github.com/centic9/commons-test'
                }
            }
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            //url = layout.buildDirectory.dir('repo')
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials(PasswordCredentials)
            //snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/')
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

afterReleaseBuild.dependsOn publish
